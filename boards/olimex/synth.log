
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.54+1 (git sha1 c0f52c6ea, clang++ 18.1.8 -fPIC -O3)

-- Running command ` read_verilog -defer -sv top.v clk_in_10MHz_out_12MHz.v ../../src/usb_hid_host.v ../../src/usb_hid_host_rom.v;  synth_gatemate -nomult -nomx8 -luttree -top top -json usb-hid-host.json -vlog usb-hid-host_ys.v' --

1. Executing Verilog-2005 frontend: top.v
Parsing SystemVerilog input from `top.v' to AST representation.
Storing AST representation for module `$abstract\top'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: clk_in_10MHz_out_12MHz.v
Parsing SystemVerilog input from `clk_in_10MHz_out_12MHz.v' to AST representation.
Storing AST representation for module `$abstract\pll12'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: ../../src/usb_hid_host.v
Parsing SystemVerilog input from `../../src/usb_hid_host.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (../../src/usb_hid_host.v:361)
Warning: Yosys has only limited support for tri-state logic at the moment. (../../src/usb_hid_host.v:362)
Storing AST representation for module `$abstract\usb_hid_host'.
Storing AST representation for module `$abstract\ukp'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: ../../src/usb_hid_host_rom.v
Parsing SystemVerilog input from `../../src/usb_hid_host_rom.v' to AST representation.
Storing AST representation for module `$abstract\usb_hid_host_rom'.
Successfully finished Verilog frontend.

5. Executing SYNTH_GATEMATE pass.

5.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/cells_sim.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\CC_IBUF'.
Generating RTLIL representation for module `\CC_OBUF'.
Generating RTLIL representation for module `\CC_TOBUF'.
Generating RTLIL representation for module `\CC_IOBUF'.
Generating RTLIL representation for module `\CC_LVDS_IBUF'.
Generating RTLIL representation for module `\CC_LVDS_OBUF'.
Generating RTLIL representation for module `\CC_LVDS_TOBUF'.
Generating RTLIL representation for module `\CC_LVDS_IOBUF'.
Generating RTLIL representation for module `\CC_IDDR'.
Generating RTLIL representation for module `\CC_ODDR'.
Generating RTLIL representation for module `\CC_DFF'.
Generating RTLIL representation for module `\CC_DLT'.
Generating RTLIL representation for module `\CC_LUT1'.
Generating RTLIL representation for module `\CC_LUT2'.
Generating RTLIL representation for module `\CC_LUT3'.
Generating RTLIL representation for module `\CC_LUT4'.
Generating RTLIL representation for module `\CC_MX2'.
Generating RTLIL representation for module `\CC_MX4'.
Generating RTLIL representation for module `\CC_MX8'.
Generating RTLIL representation for module `\CC_ADDF'.
Generating RTLIL representation for module `\CC_MULT'.
Generating RTLIL representation for module `\CC_BUFG'.
Generating RTLIL representation for module `\CC_BRAM_20K'.
Generating RTLIL representation for module `\CC_BRAM_40K'.
Generating RTLIL representation for module `\CC_FIFO_40K'.
Generating RTLIL representation for module `\CC_L2T4'.
Generating RTLIL representation for module `\CC_L2T5'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/cells_bb.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/cells_bb.v' to AST representation.
Generating RTLIL representation for module `\CC_PLL'.
Generating RTLIL representation for module `\CC_PLL_ADV'.
Generating RTLIL representation for module `\CC_SERDES'.
Generating RTLIL representation for module `\CC_CFG_CTRL'.
Generating RTLIL representation for module `\CC_USR_RSTN'.
Successfully finished Verilog frontend.

5.3. Executing HIERARCHY pass (managing design hierarchy).

5.4. Executing AST frontend in derive mode using pre-parsed AST for module `\top'.
Generating RTLIL representation for module `\top'.

5.4.1. Analyzing design hierarchy..
Top module:  \top

5.4.2. Executing AST frontend in derive mode using pre-parsed AST for module `\usb_hid_host'.
Generating RTLIL representation for module `\usb_hid_host'.

5.4.3. Executing AST frontend in derive mode using pre-parsed AST for module `\pll12'.
Generating RTLIL representation for module `\pll12'.

5.4.4. Analyzing design hierarchy..
Top module:  \top
Used module:     \usb_hid_host
Used module:     \pll12

5.4.5. Executing AST frontend in derive mode using pre-parsed AST for module `\ukp'.
Generating RTLIL representation for module `\ukp'.

5.4.6. Analyzing design hierarchy..
Top module:  \top
Used module:     \usb_hid_host
Used module:         \ukp
Used module:     \pll12

5.4.7. Executing AST frontend in derive mode using pre-parsed AST for module `\usb_hid_host_rom'.
Generating RTLIL representation for module `\usb_hid_host_rom'.

5.4.8. Analyzing design hierarchy..
Top module:  \top
Used module:     \usb_hid_host
Used module:         \ukp
Used module:             \usb_hid_host_rom
Used module:     \pll12

5.4.9. Analyzing design hierarchy..
Top module:  \top
Used module:     \usb_hid_host
Used module:         \ukp
Used module:             \usb_hid_host_rom
Used module:     \pll12
Removing unused module `$abstract\usb_hid_host_rom'.
Removing unused module `$abstract\ukp'.
Removing unused module `$abstract\usb_hid_host'.
Removing unused module `$abstract\pll12'.
Removing unused module `$abstract\top'.
Removed 5 unused modules.

5.5. Executing PROC pass (convert processes to netlists).

5.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `usb_hid_host_rom.$proc$../../src/usb_hid_host_rom.v:0$240'.
Cleaned up 0 empty switches.

5.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 17 switch rules as full_case in process $proc$../../src/usb_hid_host.v:233$121 in module ukp.
Marked 3 switch rules as full_case in process $proc$../../src/usb_hid_host.v:150$60 in module usb_hid_host.
Marked 5 switch rules as full_case in process $proc$../../src/usb_hid_host.v:69$29 in module usb_hid_host.
Marked 1 switch rules as full_case in process $proc$top.v:92$16 in module top.
Removed a total of 0 dead cases.

5.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 32 assignments to connections.

5.5.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:213$236'.
  Set init value: \data = 8'00000000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:212$235'.
  Set init value: \bitadr = 7'0000000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:211$234'.
  Set init value: \interval = 14'00000000000000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:210$233'.
  Set init value: \lb4 = 4'0000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:209$232'.
  Set init value: \timing = 3'000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:208$231'.
  Set init value: \pc = 14'00000000000000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:206$230'.
  Set init value: \sb = 8'00000000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:205$229'.
  Set init value: \wk = 8'00000000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:204$228'.
  Set init value: \state = 4'0000
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:203$227'.
  Set init value: \mbit = 2'00
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:202$226'.
  Set init value: \record1 = 1'0
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:202$225'.
  Set init value: \bank = 1'0
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:200$224'.
  Set init value: \dmis = 1'0
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:200$223'.
  Set init value: \nak = 1'0
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:200$222'.
  Set init value: \cond = 1'0
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:200$221'.
  Set init value: \um = 1'0
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:200$220'.
  Set init value: \up = 1'0
Found init rule in `\ukp.$proc$../../src/usb_hid_host.v:200$219'.
  Set init value: \inst_ready = 1'0
Found init rule in `\usb_hid_host.$proc$../../src/usb_hid_host.v:67$81'.
  Set init value: \valid = 1'0

5.5.5. Executing PROC_ARST pass (detect async resets in processes).

5.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~72 debug messages>

5.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\usb_hid_host_rom.$proc$../../src/usb_hid_host_rom.v:8$237'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:213$236'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:212$235'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:211$234'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:210$233'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:209$232'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:208$231'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:206$230'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:205$229'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:204$228'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:203$227'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:202$226'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:202$225'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:200$224'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:200$223'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:200$222'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:200$221'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:200$220'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:200$219'.
Creating decoders for process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
     1/41: $0\data[7:0] [7]
     2/41: $0\data[7:0] [6:0]
     3/41: $0\sb[7:0] [3:0]
     4/41: $0\wk[7:0] [3:0]
     5/41: $0\ukprdyd[0:0]
     6/41: $0\dmi[0:0]
     7/41: $0\dpi[0:0]
     8/41: $0\conct[23:0]
     9/41: $0\dmid[0:0]
    10/41: $0\nrzrxct[2:0]
    11/41: $0\nrztxct[2:0]
    12/41: $0\sb[7:0] [7:4]
    13/41: $0\bitadr[6:0]
    14/41: $0\interval[13:0]
    15/41: $0\lb4w[3:0]
    16/41: $0\lb4[3:0]
    17/41: $0\timing[2:0]
    18/41: $0\wpc[13:0]
    19/41: $0\pc[13:0]
    20/41: $0\sadr[3:0]
    21/41: $0\wk[7:0] [7:4]
    22/41: $0\nakd[0:0]
    23/41: $0\state[3:0]
    24/41: $0\mbit[1:0]
    25/41: $0\record1[0:0]
    26/41: $0\bank[0:0]
    27/41: $0\nrzon[0:0]
    28/41: $0\ug[0:0]
    29/41: $0\dmis[0:0]
    30/41: $0\nak[0:0]
    31/41: $0\cond[0:0]
    32/41: $0\um[0:0]
    33/41: $0\up[0:0]
    34/41: $0\inst_ready[0:0]
    35/41: $0\insth[3:0]
    36/41: $0\ukprdy[0:0]
    37/41: $0\connected[0:0]
    38/41: $0\save_b[3:0]
    39/41: $0\save_r[3:0]
    40/41: $0\save[0:0]
    41/41: $0\ukpdat[7:0]
Creating decoders for process `\pll12.$proc$clk_in_10MHz_out_12MHz.v:28$82'.
Creating decoders for process `\usb_hid_host.$proc$../../src/usb_hid_host.v:67$81'.
Creating decoders for process `\usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
     1/4: $1$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$66
     2/4: $1$memwr$\regs$../../src/usb_hid_host.v:153$20_DATA[7:0]$65
     3/4: $1$memwr$\regs$../../src/usb_hid_host.v:153$20_ADDR[3:0]$64
     4/4: $0\typ[1:0]
Creating decoders for process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
     1/27: $0\game_u[0:0]
     2/27: $2$memwr$\dat$../../src/usb_hid_host.v:79$19_DATA[7:0]$41
     3/27: $2$memwr$\dat$../../src/usb_hid_host.v:79$19_ADDR[3:0]$40
     4/27: $1$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$37
     5/27: $1$memwr$\dat$../../src/usb_hid_host.v:79$19_DATA[7:0]$36
     6/27: $1$memwr$\dat$../../src/usb_hid_host.v:79$19_ADDR[3:0]$35
     7/27: $0\report[0:0]
     8/27: $0\valid[0:0]
     9/27: $0\rcvct[3:0]
    10/27: $0\game_sta[0:0]
    11/27: $0\game_sel[0:0]
    12/27: $0\game_y[0:0]
    13/27: $0\game_x[0:0]
    14/27: $0\game_b[0:0]
    15/27: $0\game_a[0:0]
    16/27: $0\game_r[0:0]
    17/27: $0\game_l[0:0]
    18/27: $2$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$42
    19/27: $0\game_d[0:0]
    20/27: $0\mouse_dy[7:0]
    21/27: $0\mouse_dx[7:0]
    22/27: $0\mouse_btn[7:0]
    23/27: $0\key4[7:0]
    24/27: $0\key3[7:0]
    25/27: $0\key2[7:0]
    26/27: $0\key1[7:0]
    27/27: $0\key_modifiers[7:0]
Creating decoders for process `\top.$proc$top.v:92$16'.
     1/1: $0\report_counter[6:0]

5.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.5.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\usb_hid_host_rom.\data' using process `\usb_hid_host_rom.$proc$../../src/usb_hid_host_rom.v:8$237'.
  created $dff cell `$procdff$1191' with positive edge clock.
Creating register for signal `\ukp.\ukpdat' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1192' with positive edge clock.
Creating register for signal `\ukp.\save' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1193' with positive edge clock.
Creating register for signal `\ukp.\save_r' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1194' with positive edge clock.
Creating register for signal `\ukp.\save_b' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1195' with positive edge clock.
Creating register for signal `\ukp.\connected' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1196' with positive edge clock.
Creating register for signal `\ukp.\ukprdy' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1197' with positive edge clock.
Creating register for signal `\ukp.\insth' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1198' with positive edge clock.
Creating register for signal `\ukp.\inst_ready' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1199' with positive edge clock.
Creating register for signal `\ukp.\up' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1200' with positive edge clock.
Creating register for signal `\ukp.\um' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1201' with positive edge clock.
Creating register for signal `\ukp.\cond' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1202' with positive edge clock.
Creating register for signal `\ukp.\nak' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1203' with positive edge clock.
Creating register for signal `\ukp.\dmis' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1204' with positive edge clock.
Creating register for signal `\ukp.\ug' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1205' with positive edge clock.
Creating register for signal `\ukp.\nrzon' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1206' with positive edge clock.
Creating register for signal `\ukp.\bank' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1207' with positive edge clock.
Creating register for signal `\ukp.\record1' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1208' with positive edge clock.
Creating register for signal `\ukp.\mbit' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1209' with positive edge clock.
Creating register for signal `\ukp.\state' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1210' with positive edge clock.
Creating register for signal `\ukp.\wk' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1211' with positive edge clock.
Creating register for signal `\ukp.\sb' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1212' with positive edge clock.
Creating register for signal `\ukp.\sadr' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1213' with positive edge clock.
Creating register for signal `\ukp.\pc' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1214' with positive edge clock.
Creating register for signal `\ukp.\wpc' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1215' with positive edge clock.
Creating register for signal `\ukp.\timing' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1216' with positive edge clock.
Creating register for signal `\ukp.\lb4' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1217' with positive edge clock.
Creating register for signal `\ukp.\lb4w' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1218' with positive edge clock.
Creating register for signal `\ukp.\interval' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1219' with positive edge clock.
Creating register for signal `\ukp.\bitadr' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1220' with positive edge clock.
Creating register for signal `\ukp.\data' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1221' with positive edge clock.
Creating register for signal `\ukp.\nrztxct' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1222' with positive edge clock.
Creating register for signal `\ukp.\nrzrxct' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1223' with positive edge clock.
Creating register for signal `\ukp.\dmid' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1224' with positive edge clock.
Creating register for signal `\ukp.\conct' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1225' with positive edge clock.
Creating register for signal `\ukp.\dpi' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1226' with positive edge clock.
Creating register for signal `\ukp.\dmi' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1227' with positive edge clock.
Creating register for signal `\ukp.\ukprdyd' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1228' with positive edge clock.
Creating register for signal `\ukp.\nakd' using process `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
  created $dff cell `$procdff$1229' with positive edge clock.
Creating register for signal `\pll12.\locked' using process `\pll12.$proc$clk_in_10MHz_out_12MHz.v:28$82'.
  created $dff cell `$procdff$1230' with positive edge clock.
Creating register for signal `\pll12.\locked_s1' using process `\pll12.$proc$clk_in_10MHz_out_12MHz.v:28$82'.
  created $dff cell `$procdff$1231' with positive edge clock.
Creating register for signal `\usb_hid_host.\typ' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
  created $dff cell `$procdff$1232' with positive edge clock.
Creating register for signal `\usb_hid_host.\save_delayed' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
  created $dff cell `$procdff$1233' with positive edge clock.
Creating register for signal `\usb_hid_host.\connected_r' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
  created $dff cell `$procdff$1234' with positive edge clock.
Creating register for signal `\usb_hid_host.$memwr$\regs$../../src/usb_hid_host.v:153$20_ADDR' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
  created $dff cell `$procdff$1235' with positive edge clock.
Creating register for signal `\usb_hid_host.$memwr$\regs$../../src/usb_hid_host.v:153$20_DATA' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
  created $dff cell `$procdff$1236' with positive edge clock.
Creating register for signal `\usb_hid_host.$memwr$\regs$../../src/usb_hid_host.v:153$20_EN' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
  created $dff cell `$procdff$1237' with positive edge clock.
Creating register for signal `\usb_hid_host.\key_modifiers' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1238' with positive edge clock.
Creating register for signal `\usb_hid_host.\key1' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1239' with positive edge clock.
Creating register for signal `\usb_hid_host.\key2' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1240' with positive edge clock.
Creating register for signal `\usb_hid_host.\key3' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1241' with positive edge clock.
Creating register for signal `\usb_hid_host.\key4' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1242' with positive edge clock.
Creating register for signal `\usb_hid_host.\mouse_btn' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1243' with positive edge clock.
Creating register for signal `\usb_hid_host.\mouse_dx' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1244' with positive edge clock.
Creating register for signal `\usb_hid_host.\mouse_dy' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1245' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_l' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1246' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_r' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1247' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_u' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1248' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_d' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1249' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_a' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1250' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_b' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1251' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_x' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1252' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_y' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1253' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_sel' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1254' with positive edge clock.
Creating register for signal `\usb_hid_host.\game_sta' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1255' with positive edge clock.
Creating register for signal `\usb_hid_host.\report' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1256' with positive edge clock.
Creating register for signal `\usb_hid_host.\rcvct' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1257' with positive edge clock.
Creating register for signal `\usb_hid_host.\data_strobe_r' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1258' with positive edge clock.
Creating register for signal `\usb_hid_host.\data_rdy_r' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1259' with positive edge clock.
Creating register for signal `\usb_hid_host.\valid' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1260' with positive edge clock.
Creating register for signal `\usb_hid_host.$memwr$\dat$../../src/usb_hid_host.v:79$19_ADDR' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1261' with positive edge clock.
Creating register for signal `\usb_hid_host.$memwr$\dat$../../src/usb_hid_host.v:79$19_DATA' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1262' with positive edge clock.
Creating register for signal `\usb_hid_host.$memwr$\dat$../../src/usb_hid_host.v:79$19_EN' using process `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
  created $dff cell `$procdff$1263' with positive edge clock.
Creating register for signal `\top.\report_counter' using process `\top.$proc$top.v:92$16'.
  created $dff cell `$procdff$1264' with positive edge clock.

5.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `usb_hid_host_rom.$proc$../../src/usb_hid_host_rom.v:8$237'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:213$236'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:212$235'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:211$234'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:210$233'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:209$232'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:208$231'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:206$230'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:205$229'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:204$228'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:203$227'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:202$226'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:202$225'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:200$224'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:200$223'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:200$222'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:200$221'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:200$220'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:200$219'.
Found and cleaned up 42 empty switches in `\ukp.$proc$../../src/usb_hid_host.v:233$121'.
Removing empty process `ukp.$proc$../../src/usb_hid_host.v:233$121'.
Removing empty process `pll12.$proc$clk_in_10MHz_out_12MHz.v:28$82'.
Removing empty process `usb_hid_host.$proc$../../src/usb_hid_host.v:67$81'.
Found and cleaned up 5 empty switches in `\usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
Removing empty process `usb_hid_host.$proc$../../src/usb_hid_host.v:150$60'.
Found and cleaned up 23 empty switches in `\usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
Removing empty process `usb_hid_host.$proc$../../src/usb_hid_host.v:69$29'.
Found and cleaned up 2 empty switches in `\top.$proc$top.v:92$16'.
Removing empty process `top.$proc$top.v:92$16'.
Cleaned up 72 empty switches.

5.5.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module usb_hid_host_rom.
Optimizing module ukp.
<suppressed ~67 debug messages>
Optimizing module pll12.
Optimizing module usb_hid_host.
<suppressed ~39 debug messages>
Optimizing module top.
<suppressed ~1 debug messages>

5.6. Executing FLATTEN pass (flatten design).
Deleting now unused module usb_hid_host_rom.
Deleting now unused module ukp.
Deleting now unused module pll12.
Deleting now unused module usb_hid_host.
<suppressed ~4 debug messages>

5.7. Executing TRIBUF pass.

5.8. Executing DEMINOUT pass (demote inout ports to input or output).

5.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~43 debug messages>

5.10. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 224 unused cells and 614 unused wires.
<suppressed ~247 debug messages>

5.11. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

5.12. Executing OPT pass (performing simple optimizations).

5.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

5.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\usb.\ukp.$procmux$661: \usb.ukp.inst_ready -> 1'1
      Replacing known input bits on port A of cell $flatten\usb.\ukp.$procmux$659: \usb.ukp.inst_ready -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\usb.$procmux$812.
    dead port 2/2 on $mux $flatten\usb.$procmux$1037.
    dead port 2/2 on $mux $flatten\usb.$procmux$806.
Removed 3 multiplexer ports.
<suppressed ~58 debug messages>

5.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\usb.\ukp.$procmux$478: { $flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:216$84_Y $flatten\usb.\ukp.$procmux$278_CMP $flatten\usb.\ukp.$procmux$368_CMP $flatten\usb.\ukp.$procmux$381_CMP $flatten\usb.\ukp.$procmux$262_CMP $flatten\usb.\ukp.$procmux$340_CMP $flatten\usb.\ukp.$procmux$480_CMP $auto$opt_reduce.cc:137:opt_pmux$1272 }
    Consolidated identical input bits for $mux cell $flatten\usb.$procmux$1034:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\usb.$procmux$1034_Y
      New ports: A=1'0, B=1'1, Y=$flatten\usb.$procmux$1034_Y [0]
      New connections: $flatten\usb.$procmux$1034_Y [7:1] = { $flatten\usb.$procmux$1034_Y [0] $flatten\usb.$procmux$1034_Y [0] $flatten\usb.$procmux$1034_Y [0] $flatten\usb.$procmux$1034_Y [0] $flatten\usb.$procmux$1034_Y [0] $flatten\usb.$procmux$1034_Y [0] $flatten\usb.$procmux$1034_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\usb.$procmux$748:
      Old ports: A=8'00000000, B=8'11111111, Y=$flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63
      New ports: A=1'0, B=1'1, Y=$flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [0]
      New connections: $flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [7:1] = { $flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [0] $flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [0] $flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [0] $flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [0] $flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [0] $flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [0] $flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_EN[7:0]$63 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\usb.$procmux$815:
      Old ports: A=8'00000000, B=$flatten\usb.$2$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$42, Y=$flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32
      New ports: A=1'0, B=$flatten\usb.$procmux$1034_Y [0], Y=$flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [0]
      New connections: $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [7:1] = { $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [0] $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [0] $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [0] $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [0] $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [0] $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [0] $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [0] }
  Optimizing cells in module \top.
Performed a total of 4 changes.

5.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.12.6. Executing OPT_DFF pass (perform DFF optimizations).

5.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 89 unused wires.
<suppressed ~44 debug messages>

5.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.12.9. Rerunning OPT passes. (Maybe there is more to do..)

5.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

5.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.12.13. Executing OPT_DFF pass (perform DFF optimizations).

5.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.12.16. Finished OPT passes. (There is nothing left to do.)

5.13. Executing FSM pass (extract and optimize FSM).

5.13.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.usb.typ as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.usb.ukp.mbit as FSM state register:
    Register has an initialization value.
Not marking top.usb.ukp.state as FSM state register:
    Register has an initialization value.

5.13.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.13.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.13.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.13.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.13.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.13.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.13.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.14. Executing OPT pass (performing simple optimizations).

5.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~58 debug messages>

5.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.14.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$1264 ($dff) from module top (D = $procmux$1186_Y, Q = \report_counter, rval = 7'0000000).
Adding EN signal on $auto$ff.cc:266:slice$1273 ($sdff) from module top (D = $add$top.v:94$18_Y [6:0], Q = \report_counter).
Adding EN signal on $flatten\usb.\ukp.$procdff$1228 ($dff) from module top (D = \usb.ukp.ukprdy, Q = \usb.ukp.ukprdyd).
Adding EN signal on $flatten\usb.\ukp.$procdff$1227 ($dff) from module top (D = \usb_fpga_bd_dn, Q = \usb.ukp.dmi).
Adding EN signal on $flatten\usb.\ukp.$procdff$1226 ($dff) from module top (D = \usb_fpga_bd_dp, Q = \usb.ukp.dpi).
Adding EN signal on $flatten\usb.\ukp.$procdff$1225 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$300_Y, Q = \usb.ukp.conct).
Adding SRST signal on $auto$ff.cc:266:slice$1278 ($dffe) from module top (D = $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:355$202_Y [23:0], Q = \usb.ukp.conct, rval = 24'000000000000000000000000).
Adding EN signal on $flatten\usb.\ukp.$procdff$1224 ($dff) from module top (D = \usb.ukp.dmi, Q = \usb.ukp.dmid).
Adding EN signal on $flatten\usb.\ukp.$procdff$1223 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$314_Y, Q = \usb.ukp.nrzrxct).
Adding EN signal on $flatten\usb.\ukp.$procdff$1222 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$329_Y, Q = \usb.ukp.nrztxct).
Adding EN signal on $flatten\usb.\ukp.$procdff$1221 ($dff) from module top (D = { $flatten\usb.\ukp.$procmux$313_CMP \usb.ukp.data [7:1] }, Q = \usb.ukp.data).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1220 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$352_Y, Q = \usb.ukp.bitadr, rval = 7'0000000).
Adding EN signal on $flatten\usb.\ukp.$procdff$1219 ($dff) from module top (D = $flatten\usb.\ukp.$ternary$../../src/usb_hid_host.v:346$190_Y [13:0], Q = \usb.ukp.interval).
Adding SRST signal on $auto$ff.cc:266:slice$1303 ($dffe) from module top (D = $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:346$189_Y [13:0], Q = \usb.ukp.interval, rval = 14'00000000000000).
Adding EN signal on $flatten\usb.\ukp.$procdff$1218 ($dff) from module top (D = \usb.ukp.ukprom.data, Q = \usb.ukp.lb4w).
Adding EN signal on $flatten\usb.\ukp.$procdff$1217 ($dff) from module top (D = \usb.ukp.ukprom.data, Q = \usb.ukp.lb4).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1216 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$391_Y, Q = \usb.ukp.timing, rval = 3'000).
Adding EN signal on $auto$ff.cc:266:slice$1315 ($sdff) from module top (D = $flatten\usb.\ukp.$procmux$388_Y, Q = \usb.ukp.timing).
Adding EN signal on $flatten\usb.\ukp.$procdff$1215 ($dff) from module top (D = $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:290$142_Y [13:0], Q = \usb.ukp.wpc).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1214 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$426_Y, Q = \usb.ukp.pc, rval = 14'00000000000000).
Adding EN signal on $flatten\usb.\ukp.$procdff$1213 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$451_Y, Q = \usb.ukp.sadr).
Adding EN signal on $flatten\usb.\ukp.$procdff$1212 ($dff) from module top (D = \usb.ukp.ukprom.data, Q = \usb.ukp.sb [3:0]).
Adding EN signal on $flatten\usb.\ukp.$procdff$1212 ($dff) from module top (D = \usb.ukp.ukprom.data, Q = \usb.ukp.sb [7:4]).
Adding EN signal on $flatten\usb.\ukp.$procdff$1211 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$277_Y, Q = \usb.ukp.wk [3:0]).
Adding EN signal on $flatten\usb.\ukp.$procdff$1211 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$464_Y, Q = \usb.ukp.wk [7:4]).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1210 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$505_Y, Q = \usb.ukp.state, rval = 4'0000).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1209 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$519_Y, Q = \usb.ukp.mbit, rval = 2'00).
Adding EN signal on $flatten\usb.\ukp.$procdff$1206 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$533_Y, Q = \usb.ukp.nrzon).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1205 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$558_Y, Q = \usb.ukp.ug, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1359 ($sdff) from module top (D = $flatten\usb.\ukp.$procmux$558_Y, Q = \usb.ukp.ug).
Adding EN signal on $flatten\usb.\ukp.$procdff$1204 ($dff) from module top (D = \usb.ukp.dmi, Q = \usb.ukp.dmis).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1203 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$573_Y, Q = \usb.ukp.nak, rval = 1'1).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1202 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$599_Y, Q = \usb.ukp.cond, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1375 ($sdff) from module top (D = $flatten\usb.\ukp.$procmux$595_Y, Q = \usb.ukp.cond).
Adding EN signal on $flatten\usb.\ukp.$procdff$1201 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$626_Y, Q = \usb.ukp.um).
Adding EN signal on $flatten\usb.\ukp.$procdff$1200 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$653_Y, Q = \usb.ukp.up).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1199 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$663_Y, Q = \usb.ukp.inst_ready, rval = 1'0).
Adding EN signal on $flatten\usb.\ukp.$procdff$1198 ($dff) from module top (D = \usb.ukp.ukprom.data, Q = \usb.ukp.insth).
Adding EN signal on $flatten\usb.\ukp.$procdff$1197 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$693_Y, Q = \usb.ukp.ukprdy).
Adding SRST signal on $flatten\usb.\ukp.$procdff$1196 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$705_Y, Q = \usb.ukp.connected, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$1412 ($sdff) from module top (D = $flatten\usb.$not$../../src/usb_hid_host.v:165$79_Y, Q = \usb.ukp.connected).
Adding EN signal on $flatten\usb.\ukp.$procdff$1195 ($dff) from module top (D = \usb.ukp.ukprom.data, Q = \usb.ukp.save_b).
Adding EN signal on $flatten\usb.\ukp.$procdff$1194 ($dff) from module top (D = \usb.ukp.ukprom.data, Q = \usb.ukp.save_r).
Adding EN signal on $flatten\usb.\ukp.$procdff$1193 ($dff) from module top (D = $flatten\usb.\ukp.$procmux$737_Y, Q = \usb.ukp.save).
Adding SRST signal on $auto$ff.cc:266:slice$1428 ($dffe) from module top (D = $flatten\usb.\ukp.$procmux$733_Y, Q = \usb.ukp.save, rval = 1'0).
Adding EN signal on $flatten\usb.\ukp.$procdff$1192 ($dff) from module top (D = \usb.ukp.data, Q = \usb.ukp.ukpdat).
Adding SRST signal on $flatten\usb.$procdff$1257 ($dff) from module top (D = $flatten\usb.$procmux$850_Y, Q = \usb.rcvct, rval = 4'0000).
Adding EN signal on $auto$ff.cc:266:slice$1437 ($sdff) from module top (D = $flatten\usb.$add$../../src/usb_hid_host.v:141$55_Y [3:0], Q = \usb.rcvct).
Adding SRST signal on $flatten\usb.$procdff$1232 ($dff) from module top (D = $flatten\usb.$procmux$765_Y, Q = \usb.typ, rval = 2'00).
Adding EN signal on $auto$ff.cc:266:slice$1439 ($sdff) from module top (D = $flatten\usb.$procmux$760_Y, Q = \usb.typ).

5.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 85 unused cells and 82 unused wires.
<suppressed ~86 debug messages>

5.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~7 debug messages>

5.14.9. Rerunning OPT passes. (Maybe there is more to do..)

5.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

5.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~84 debug messages>
Removed a total of 28 cells.

5.14.13. Executing OPT_DFF pass (perform DFF optimizations).

5.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

5.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.14.16. Rerunning OPT passes. (Maybe there is more to do..)

5.14.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

5.14.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.14.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.14.20. Executing OPT_DFF pass (perform DFF optimizations).

5.14.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.14.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.14.23. Finished OPT passes. (There is nothing left to do.)

5.15. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 address bits (of 4) from memory init port top.$flatten\usb.$auto$proc_memwr.cc:45:proc_memwr$1265 (usb.regs).
Removed top 1 address bits (of 4) from memory init port top.$flatten\usb.$auto$proc_memwr.cc:45:proc_memwr$1266 (usb.dat).
Removed top 1 address bits (of 4) from memory read port top.$flatten\usb.$memrd$\dat$../../src/usb_hid_host.v:153$67 (usb.dat).
Removed top 29 address bits (of 32) from memory read port top.$flatten\usb.$memrd$\regs$../../src/usb_hid_host.v:156$72 (usb.regs).
Removed top 29 address bits (of 32) from memory read port top.$flatten\usb.$memrd$\regs$../../src/usb_hid_host.v:157$74 (usb.regs).
Removed top 29 address bits (of 32) from memory read port top.$flatten\usb.$memrd$\regs$../../src/usb_hid_host.v:158$76 (usb.regs).
Removed top 22 address bits (of 32) from memory init port top.$flatten\usb.\ukp.\ukprom.$meminit$\mem$../../src/usb_hid_host_rom.v:0$239 (usb.ukp.ukprom.mem).
Removed top 4 address bits (of 14) from memory read port top.$flatten\usb.\ukp.\ukprom.$memrd$\mem$../../src/usb_hid_host_rom.v:8$238 (usb.ukp.ukprom.mem).
Removed top 2 bits (of 4) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1387 ($ne).
Removed top 31 bits (of 32) from port B of cell top.$add$top.v:94$18 ($add).
Removed top 25 bits (of 32) from port Y of cell top.$add$top.v:94$18 ($add).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1338 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1364 ($ne).
Removed top 3 bits (of 5) from port B of cell top.$auto$opt_dff.cc:195:make_patterns_logic$1366 ($ne).
Removed top 2 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:217$85 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:218$87 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:218$88 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\usb.\ukp.$ne$../../src/usb_hid_host.v:219$96 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:222$107 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:223$110 ($eq).
Removed top 31 bits (of 32) from mux cell top.$flatten\usb.\ukp.$ternary$../../src/usb_hid_host.v:223$112 ($mux).
Removed top 31 bits (of 32) from mux cell top.$flatten\usb.\ukp.$ternary$../../src/usb_hid_host.v:224$116 ($mux).
Removed top 29 bits (of 32) from port A of cell top.$flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:225$117 ($sub).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:225$117 ($sub).
Removed top 28 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$shiftx$../../src/usb_hid_host.v:0$118 ($shiftx).
Removed top 3 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:245$123 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:246$124 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:249$127 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:259$135 ($sub).
Removed top 29 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:290$142 ($add).
Removed top 18 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:290$142 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:298$146 ($add).
Removed top 18 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:298$146 ($add).
Removed top 1 bits (of 2) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:305$147 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:308$151 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:308$151 ($add).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:310$152 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:317$162 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:326$171 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:326$171 ($add).
Removed top 3 bits (of 7) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:329$172 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:333$175 ($add).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:333$175 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:336$177 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:336$177 ($add).
Removed top 2 bits (of 7) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:341$182 ($eq).
Removed top 28 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$gt$../../src/usb_hid_host.v:344$184 ($gt).
Removed top 1 bits (of 3) from port B of cell top.$flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:344$187 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:346$189 ($add).
Removed top 18 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:346$189 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:355$202 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:355$202 ($add).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$procmux$262_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$procmux$278_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$procmux$340_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$procmux$368_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$procmux$381_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\usb.\ukp.$procmux$465_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\usb.\ukp.$procmux$591_CMP0 ($eq).
Removed top 1 bits (of 4) from FF cell top.$auto$ff.cc:266:slice$1416 ($dffe).
Removed top 1 bits (of 4) from mux cell top.$flatten\usb.$procmux$821 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\usb.$procmux$809 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\usb.$procmux$754 ($mux).
Removed top 30 bits (of 32) from mux cell top.$flatten\usb.$ternary$../../src/usb_hid_host.v:158$78 ($mux).
Removed top 7 bits (of 8) from port B of cell top.$flatten\usb.$eq$../../src/usb_hid_host.v:158$77 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\usb.$eq$../../src/usb_hid_host.v:157$75 ($eq).
Removed top 6 bits (of 8) from port B of cell top.$flatten\usb.$eq$../../src/usb_hid_host.v:156$73 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\usb.$eq$../../src/usb_hid_host.v:154$70 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\usb.$add$../../src/usb_hid_host.v:141$55 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\usb.$add$../../src/usb_hid_host.v:141$55 ($add).
Removed top 25 bits (of 32) from wire top.$add$top.v:94$18_Y.
Removed top 1 bits (of 4) from wire top.$flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_ADDR[3:0]$30.
Removed top 1 bits (of 8) from wire top.$flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_DATA[7:0]$31.
Removed top 1 bits (of 4) from wire top.$flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_ADDR[3:0]$61.
Removed top 1 bits (of 8) from wire top.$flatten\usb.$0$memwr$\regs$../../src/usb_hid_host.v:153$20_DATA[7:0]$62.
Removed top 1 bits (of 4) from wire top.$flatten\usb.$2$memwr$\dat$../../src/usb_hid_host.v:79$19_ADDR[3:0]$40.
Removed top 28 bits (of 32) from wire top.$flatten\usb.$add$../../src/usb_hid_host.v:141$55_Y.
Removed top 18 bits (of 32) from wire top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:290$142_Y.
Removed top 29 bits (of 32) from wire top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:308$151_Y.
Removed top 25 bits (of 32) from wire top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:333$175_Y.
Removed top 29 bits (of 32) from wire top.$flatten\usb.\ukp.$add$../../src/usb_hid_host.v:336$177_Y.

5.16. Executing PEEPOPT pass (run peephole optimizers).

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

5.18. Executing MUXPACK pass ($mux cell cascades to $pmux).
Converting top.$flatten\usb.\ukp.$procmux$441 ... top.$flatten\usb.\ukp.$procmux$443 to a pmux with 2 cases.
Converting top.$flatten\usb.\ukp.$procmux$488 ... top.$flatten\usb.\ukp.$procmux$492 to a pmux with 3 cases.
Converting top.$flatten\usb.\ukp.$procmux$496 ... top.$flatten\usb.\ukp.$procmux$498 to a pmux with 2 cases.
Converting top.$flatten\usb.\ukp.$procmux$550 ... top.$flatten\usb.\ukp.$procmux$552 to a pmux with 2 cases.
Converting top.$flatten\usb.\ukp.$procmux$689 ... top.$flatten\usb.\ukp.$procmux$691 to a pmux with 2 cases.
Converted 11 (p)mux cells into 5 pmux cells.
<suppressed ~78 debug messages>

5.19. Executing SHARE pass (SAT-based resource sharing).

5.20. Executing TECHMAP pass (map to technology primitives).

5.20.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

5.20.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~36 debug messages>

5.21. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.22. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6 unused wires.
<suppressed ~1 debug messages>

5.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:94$18 ($add).
  creating $macc model for $flatten\usb.$add$../../src/usb_hid_host.v:141$55 ($add).
  creating $macc model for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:290$142 ($add).
  creating $macc model for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:298$146 ($add).
  creating $macc model for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:308$151 ($add).
  creating $macc model for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:326$171 ($add).
  creating $macc model for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:333$175 ($add).
  creating $macc model for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:336$177 ($add).
  creating $macc model for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:346$189 ($add).
  creating $macc model for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:355$202 ($add).
  creating $macc model for $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:225$117 ($sub).
  creating $macc model for $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:259$135 ($sub).
  creating $macc model for $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:317$162 ($sub).
  creating $alu model for $macc $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:317$162.
  creating $alu model for $macc $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:259$135.
  creating $alu model for $macc $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:225$117.
  creating $alu model for $macc $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:355$202.
  creating $alu model for $macc $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:346$189.
  creating $alu model for $macc $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:336$177.
  creating $alu model for $macc $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:333$175.
  creating $alu model for $macc $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:326$171.
  creating $alu model for $macc $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:308$151.
  creating $alu model for $macc $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:298$146.
  creating $alu model for $macc $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:290$142.
  creating $alu model for $macc $flatten\usb.$add$../../src/usb_hid_host.v:141$55.
  creating $alu model for $macc $add$top.v:94$18.
  creating $alu model for $flatten\usb.\ukp.$gt$../../src/usb_hid_host.v:344$184 ($gt): new $alu
  creating $alu model for $flatten\usb.\ukp.$ne$../../src/usb_hid_host.v:219$96 ($ne): merged with $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:259$135.
  creating $alu cell for $flatten\usb.\ukp.$gt$../../src/usb_hid_host.v:344$184: $auto$alumacc.cc:495:replace_alu$1458
  creating $alu cell for $add$top.v:94$18: $auto$alumacc.cc:495:replace_alu$1469
  creating $alu cell for $flatten\usb.$add$../../src/usb_hid_host.v:141$55: $auto$alumacc.cc:495:replace_alu$1472
  creating $alu cell for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:290$142: $auto$alumacc.cc:495:replace_alu$1475
  creating $alu cell for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:298$146: $auto$alumacc.cc:495:replace_alu$1478
  creating $alu cell for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:308$151: $auto$alumacc.cc:495:replace_alu$1481
  creating $alu cell for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:326$171: $auto$alumacc.cc:495:replace_alu$1484
  creating $alu cell for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:333$175: $auto$alumacc.cc:495:replace_alu$1487
  creating $alu cell for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:336$177: $auto$alumacc.cc:495:replace_alu$1490
  creating $alu cell for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:346$189: $auto$alumacc.cc:495:replace_alu$1493
  creating $alu cell for $flatten\usb.\ukp.$add$../../src/usb_hid_host.v:355$202: $auto$alumacc.cc:495:replace_alu$1496
  creating $alu cell for $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:225$117: $auto$alumacc.cc:495:replace_alu$1499
  creating $alu cell for $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:259$135, $flatten\usb.\ukp.$ne$../../src/usb_hid_host.v:219$96: $auto$alumacc.cc:495:replace_alu$1502
  creating $alu cell for $flatten\usb.\ukp.$sub$../../src/usb_hid_host.v:317$162: $auto$alumacc.cc:495:replace_alu$1509
  created 14 $alu and 0 $macc cells.

5.24. Executing OPT pass (performing simple optimizations).

5.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.24.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

5.24.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\usb.\ukp.$procmux$488: { $auto$opt_reduce.cc:137:opt_pmux$1513 $flatten\usb.\ukp.$eq$../../src/usb_hid_host.v:245$123_Y }
  Optimizing cells in module \top.
Performed a total of 1 changes.

5.24.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.24.6. Executing OPT_DFF pass (perform DFF optimizations).

5.24.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

5.24.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.24.9. Rerunning OPT passes. (Maybe there is more to do..)

5.24.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

5.24.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.24.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.24.13. Executing OPT_DFF pass (perform DFF optimizations).

5.24.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.24.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.24.16. Finished OPT passes. (There is nothing left to do.)

5.25. Executing MEMORY pass.

5.25.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.25.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.25.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing top.usb.dat write port 0.
  Analyzing top.usb.regs write port 0.

5.25.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

5.25.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\usb.dat'[0] in module `\top': no output FF found.
Checking read port `\usb.regs'[0] in module `\top': no output FF found.
Checking read port `\usb.regs'[1] in module `\top': no output FF found.
Checking read port `\usb.regs'[2] in module `\top': no output FF found.
Checking read port `\usb.ukp.ukprom.mem'[0] in module `\top': merging output FF to cell.
Checking read port address `\usb.dat'[0] in module `\top': merged address FF to cell.
Checking read port address `\usb.regs'[0] in module `\top': no address FF found.
Checking read port address `\usb.regs'[1] in module `\top': no address FF found.
Checking read port address `\usb.regs'[2] in module `\top': no address FF found.

5.25.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

5.25.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory top.usb.regs by address:
  Merging ports 1, 2 (address 3'101).
Consolidating read ports of memory top.usb.regs by address:
  Merging ports 0, 1 (address 3'110).

5.25.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.25.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

5.25.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.26. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.27. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top.usb.dat
using FF mapping for memory top.usb.regs
mapping memory top.usb.ukp.ukprom.mem via $__CC_BRAM_TDP_
<suppressed ~481 debug messages>

5.28. Executing TECHMAP pass (map to technology primitives).

5.28.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/brams_map.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__CC_BRAM_TDP_'.
Generating RTLIL representation for module `\$__CC_BRAM_SDP_'.
Successfully finished Verilog frontend.

5.28.2. Continuing TECHMAP pass.
Using template $paramod$337d870e687f4806175d1274c2cc28258f2dd54e\$__CC_BRAM_TDP_ for cells of type $__CC_BRAM_TDP_.
No more expansions possible.
<suppressed ~46 debug messages>

5.29. Executing OPT pass (performing simple optimizations).

5.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~33 debug messages>

5.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.29.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1392 ($dffe) from module top (D = $flatten\usb.\ukp.$procmux$651_Y, Q = \usb.ukp.up, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1381 ($dffe) from module top (D = $flatten\usb.\ukp.$procmux$624_Y, Q = \usb.ukp.um, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$1285 ($dffe) from module top (D = $auto$wreduce.cc:514:run$1455 [2:0], Q = \usb.ukp.nrzrxct, rval = 3'000).

5.29.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 46 unused wires.
<suppressed ~6 debug messages>

5.29.5. Rerunning OPT passes. (Removed registers in this run.)

5.29.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.29.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.29.8. Executing OPT_DFF pass (perform DFF optimizations).

5.29.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.29.10. Finished fast OPT passes.

5.30. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \usb.dat in module \top:
  created 8 $dff cells and 0 static cells of width 8.
Extracted addr FF from read port 0 of top.usb.dat: $\usb.dat$rdreg[0]
  read interface: 1 $dff and 7 $mux cells.
  write interface: 8 write mux blocks.
Mapping memory \usb.regs in module \top:
  created 8 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 1 $mux cells.
  write interface: 8 write mux blocks.

5.31. Executing OPT pass (performing simple optimizations).

5.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~13 debug messages>

5.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.31.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~45 debug messages>

5.31.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\usb.\ukp.$procmux$409:
      Old ports: A={ 4'0000 \usb.ukp.ukprom.data \usb.ukp.lb4 2'00 }, B={ \usb.ukp.ukprom.data \usb.ukp.lb4 \usb.ukp.lb4w 2'00 }, Y=$flatten\usb.\ukp.$procmux$409_Y
      New ports: A={ 4'0000 \usb.ukp.ukprom.data \usb.ukp.lb4 }, B={ \usb.ukp.ukprom.data \usb.ukp.lb4 \usb.ukp.lb4w }, Y=$flatten\usb.\ukp.$procmux$409_Y [13:2]
      New connections: $flatten\usb.\ukp.$procmux$409_Y [1:0] = 2'00
  Optimizing cells in module \top.
Performed a total of 1 changes.

5.31.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.31.6. Executing OPT_DFF pass (perform DFF optimizations).

5.31.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 23 unused cells and 57 unused wires.
<suppressed ~29 debug messages>

5.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.31.9. Rerunning OPT passes. (Maybe there is more to do..)

5.31.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~40 debug messages>

5.31.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.31.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.31.13. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\usb.regs[6]$1664 ($dff) from module top (D = $auto$wreduce.cc:514:run$1449, Q = \usb.regs[6]).
Adding EN signal on $memory\usb.regs[5]$1662 ($dff) from module top (D = $auto$wreduce.cc:514:run$1449, Q = \usb.regs[5]).
Adding EN signal on $memory\usb.regs[4]$1660 ($dff) from module top (D = $auto$wreduce.cc:514:run$1449, Q = \usb.regs[4]).
Adding EN signal on $memory\usb.dat[7]$1561 ($dff) from module top (D = \usb.ukp.ukpdat, Q = \usb.dat[7]).
Adding EN signal on $memory\usb.dat[6]$1559 ($dff) from module top (D = \usb.ukp.ukpdat, Q = \usb.dat[6]).
Adding EN signal on $memory\usb.dat[5]$1557 ($dff) from module top (D = \usb.ukp.ukpdat, Q = \usb.dat[5]).
Adding EN signal on $memory\usb.dat[4]$1555 ($dff) from module top (D = \usb.ukp.ukpdat, Q = \usb.dat[4]).
Adding EN signal on $memory\usb.dat[3]$1553 ($dff) from module top (D = \usb.ukp.ukpdat, Q = \usb.dat[3]).
Adding EN signal on $memory\usb.dat[2]$1551 ($dff) from module top (D = \usb.ukp.ukpdat, Q = \usb.dat[2]).
Adding EN signal on $memory\usb.dat[1]$1549 ($dff) from module top (D = \usb.ukp.ukpdat, Q = \usb.dat[1]).
Adding EN signal on $memory\usb.dat[0]$1547 ($dff) from module top (D = \usb.ukp.ukpdat, Q = \usb.dat[0]).

5.31.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 11 unused cells and 11 unused wires.
<suppressed ~12 debug messages>

5.31.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.31.16. Rerunning OPT passes. (Maybe there is more to do..)

5.31.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~29 debug messages>

5.31.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.31.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.31.20. Executing OPT_DFF pass (perform DFF optimizations).

5.31.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.31.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.31.23. Finished OPT passes. (There is nothing left to do.)

5.32. Executing TECHMAP pass (map to technology primitives).

5.32.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.32.2. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/arith_map.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_gatemate_alu'.
Successfully finished Verilog frontend.

5.32.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using template $paramod$15a3b70ea5534c0cc298fa6d405a538b5f71cb9e\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $or.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$403a3c2fa431a154c52a6a5429d7a6260b5d144f\_80_gatemate_alu for cells of type $alu.
Using template $paramod$constmap:de64642e95807af510ec2f372d99917387e547b5$paramod$2cd5a0fc12c713b111b124c014c3805512a5d620\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$713617589782cfade849bb573b5c36106c4b708f\_80_gatemate_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_gatemate_alu for cells of type $alu.
Using template $paramod$constmap:548655ea7a9f4b8765fbaf18e57c3e0ed50fbb05$paramod$de8a7382a076e7098413d0898463451f9360b294\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$92adee9538f2381d8e5006822c900eb986d754e8\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xnor.
Using template $paramod$79aa992f2eb7f354d4aaf651790713cf239111fa\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $tribuf.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$b6ec48645094baeb70d6b93add0cdbbe7498ad3c\_90_pmux for cells of type $pmux.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$8f780356cb6cdb52f6a744190131b65634639c4e\_80_gatemate_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~1142 debug messages>

5.33. Executing OPT pass (performing simple optimizations).

5.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~682 debug messages>

5.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~543 debug messages>
Removed a total of 181 cells.

5.33.3. Executing OPT_DFF pass (perform DFF optimizations).

5.33.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 162 unused cells and 621 unused wires.
<suppressed ~164 debug messages>

5.33.5. Finished fast OPT passes.

5.34. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port top.usb_fpga_bd_dn[0] using CC_IOBUF.
Mapping port top.usb_fpga_bd_dp[0] using CC_IOBUF.
Mapping port top.clk_i using CC_IBUF.
Mapping port top.o_led_D1 using CC_OBUF.
Mapping port top.rstn_i using CC_IBUF.
Mapping port top.usb_fpga_pu_dn using CC_OBUF.
Mapping port top.usb_fpga_pu_dp using CC_OBUF.
Removed 0 unused cells and 6 unused wires.

5.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.36. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

5.37. Executing TECHMAP pass (map to technology primitives).

5.37.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/reg_map.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/reg_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFFE_xxxx_'.
Generating RTLIL representation for module `\$_DLATCH_xxx_'.
Successfully finished Verilog frontend.

5.37.2. Continuing TECHMAP pass.
Using template $paramod$7b2151c3bb8e318976eb0e31a556e245b4d15ccd\$_DFFE_xxxx_ for cells of type $_DFFE_PP0P_.
Using template $paramod$0ea0c0ecb89aa8a394fc59f557ec4597a0d47f80\$_DFFE_xxxx_ for cells of type $_DFFE_PP0P_.
Using template $paramod$335f7dd81cc645e1571d5f6da654e3a21aeae03a\$_DFFE_xxxx_ for cells of type $_DFFE_PP0N_.
Using template $paramod$7568817364f19026843565e6b569b5b5a44e561e\$_DFFE_xxxx_ for cells of type $_DFFE_PP0N_.
No more expansions possible.
<suppressed ~330 debug messages>

5.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.39. Executing SIMPLEMAP pass (map simple cells to gate primitives).

5.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1512 unused wires.
<suppressed ~1 debug messages>

5.41. Executing MUXCOVER pass (mapping to wider MUXes).
Covering MUX trees in module top..
  Treeifying 365 MUXes:
    Found tree with 1 MUXes at root $auto$rtlil.cc:3092:Mux$1525 [0].
    Found tree with 1 MUXes at root $auto$rtlil.cc:3092:Mux$1525 [1].
    Found tree with 1 MUXes at root $auto$rtlil.cc:3092:Mux$1525 [2].
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4424.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4426.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4428.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4430.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4432.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4434.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4436.
    Found tree with 4 MUXes at root $auto$rtlil.cc:3203:MuxGate$4502.
    Found tree with 4 MUXes at root $auto$rtlil.cc:3203:MuxGate$4506.
    Found tree with 2 MUXes at root $auto$rtlil.cc:3203:MuxGate$4508.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4448.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4420.
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$689.A.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4452.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4454.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4456.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4458.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4464.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4466.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4468.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4470.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4472.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4368.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4474.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4476.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4416.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4414.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4478.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4480.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4482.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4484.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4486.
    Found tree with 2 MUXes at root $auto$rtlil.cc:3203:MuxGate$4490.
    Found tree with 2 MUXes at root $auto$rtlil.cc:3203:MuxGate$4494.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4348.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4408.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4406.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4404.
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$procmux$478.B [28].
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$procmux$478.B [29].
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$procmux$478.B [30].
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$procmux$478.B [31].
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4346.
    Found tree with 2 MUXes at root $auto$rtlil.cc:3203:MuxGate$4498.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4402.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4400.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4392.
    Found tree with 4 MUXes at root $auto$rtlil.cc:3203:MuxGate$4340.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4398.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4396.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4352.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4366.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4354.
    Found tree with 2 MUXes at root $auto$rtlil.cc:3203:MuxGate$4326.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4384.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4376.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4374.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4372.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4328.
    Found tree with 8 MUXes at root $auto$rtlil.cc:3203:MuxGate$4336.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4410.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4412.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4418.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4422.
    Found tree with 7 MUXes at root \usb.ukp.dbit.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4356.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4358.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4360.
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$277_Y [0].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$277_Y [1].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$277_Y [2].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$277_Y [3].
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4364.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4362.
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$323_Y [0].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$323_Y [1].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$323_Y [2].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$329_Y [0].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$329_Y [1].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$329_Y [2].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$347_Y [0].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$347_Y [1].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$347_Y [2].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$347_Y [3].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$347_Y [4].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$347_Y [5].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$347_Y [6].
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4370.
    Found tree with 5 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [0].
    Found tree with 5 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [1].
    Found tree with 6 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [2].
    Found tree with 6 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [3].
    Found tree with 6 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [4].
    Found tree with 6 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [5].
    Found tree with 6 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [6].
    Found tree with 6 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [7].
    Found tree with 6 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [8].
    Found tree with 6 MUXes at root $flatten\usb.\ukp.$procmux$420_Y [9].
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4342.
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$procmux$447_Y [0].
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$procmux$447_Y [1].
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$procmux$447_Y [2].
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$procmux$447_Y [3].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$451_Y [0].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$451_Y [1].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$451_Y [2].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$451_Y [3].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$464_Y [0].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$464_Y [1].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$464_Y [2].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$464_Y [3].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$501_Y [0].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$501_Y [1].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$501_Y [2].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$501_Y [3].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$515_Y [0].
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$515_Y [1].
    Found tree with 1 MUXes at root $flatten\usb.\ukp.$procmux$569_Y.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4344.
    Found tree with 2 MUXes at root $flatten\usb.\ukp.$procmux$693_Y.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4388.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4378.
    Found tree with 2 MUXes at root $auto$rtlil.cc:3203:MuxGate$4332.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4334.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4382.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4380.
    Found tree with 1 MUXes at root $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [7].
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4462.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4460.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4450.
    Found tree with 3 MUXes at root $flatten\usb.\ukp.$shiftx$../../src/usb_hid_host.v:0$159.Y.
    Found tree with 7 MUXes at root $auto$wreduce.cc:514:run$1449 [0].
    Found tree with 7 MUXes at root $auto$wreduce.cc:514:run$1449 [1].
    Found tree with 7 MUXes at root $auto$wreduce.cc:514:run$1449 [2].
    Found tree with 7 MUXes at root $auto$wreduce.cc:514:run$1449 [3].
    Found tree with 7 MUXes at root $auto$wreduce.cc:514:run$1449 [4].
    Found tree with 7 MUXes at root $auto$wreduce.cc:514:run$1449 [5].
    Found tree with 7 MUXes at root $auto$wreduce.cc:514:run$1449 [6].
    Found tree with 7 MUXes at root $auto$wreduce.cc:514:run$1449 [7].
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4446.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4444.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4442.
    Found tree with 1 MUXes at root $auto$rtlil.cc:3203:MuxGate$4440.
    Found tree with 3 MUXes at root $auto$rtlil.cc:3203:MuxGate$4438.
    Finished treeification: Found 147 trees.
  Covering trees:
    Replaced tree at $auto$rtlil.cc:3092:Mux$1525 [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3092:Mux$1525 [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3092:Mux$1525 [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4424: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4426: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4428: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4430: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4432: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4434: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4436: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4502: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4506: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4508: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4448: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4420: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$689.A: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4452: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4454: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4456: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4458: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4464: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4466: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4468: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4470: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4472: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4368: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4474: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4476: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4416: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4414: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4478: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4480: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4482: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4484: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4486: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4490: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4494: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4348: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4408: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4406: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4404: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$478.B [28]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$478.B [29]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$478.B [30]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$478.B [31]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4346: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4498: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4402: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4400: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4392: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4340: 4 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4398: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4396: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4352: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4366: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4354: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4326: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4384: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4376: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4374: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4372: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4328: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4336: 5 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4410: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4412: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4418: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4422: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at \usb.ukp.dbit: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4356: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4358: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4360: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$277_Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$277_Y [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$277_Y [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$277_Y [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4364: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4362: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$323_Y [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$323_Y [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$323_Y [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$329_Y [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$329_Y [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$329_Y [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$347_Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$347_Y [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$347_Y [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$347_Y [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$347_Y [4]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$347_Y [5]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$347_Y [6]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4370: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [0]: 5 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [1]: 5 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [2]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [3]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [4]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [5]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [6]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [7]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [8]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$420_Y [9]: 6 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4342: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$447_Y [0]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$447_Y [1]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$447_Y [2]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$447_Y [3]: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$451_Y [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$451_Y [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$451_Y [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$451_Y [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$464_Y [0]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$464_Y [1]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$464_Y [2]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$464_Y [3]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$501_Y [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$501_Y [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$501_Y [2]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$501_Y [3]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$515_Y [0]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$515_Y [1]: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$569_Y: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4344: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$procmux$693_Y: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4388: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4378: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4332: 2 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4334: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4382: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4380: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.$0$memwr$\dat$../../src/usb_hid_host.v:79$19_EN[7:0]$32 [7]: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4462: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4460: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4450: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $flatten\usb.\ukp.$shiftx$../../src/usb_hid_host.v:0$159.Y: 0 MUX2, 1 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$wreduce.cc:514:run$1449 [0]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$wreduce.cc:514:run$1449 [1]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$wreduce.cc:514:run$1449 [2]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$wreduce.cc:514:run$1449 [3]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$wreduce.cc:514:run$1449 [4]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$wreduce.cc:514:run$1449 [5]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$wreduce.cc:514:run$1449 [6]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$wreduce.cc:514:run$1449 [7]: 1 MUX2, 2 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4446: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4444: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4442: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4440: 1 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
    Replaced tree at $auto$rtlil.cc:3203:MuxGate$4438: 3 MUX2, 0 MUX4, 0 MUX8, 0 MUX16
  Added a total of 0 decoder MUXes.
<suppressed ~6278 debug messages>

5.42. Executing OPT pass (performing simple optimizations).

5.42.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~74 debug messages>

5.42.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

5.42.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.42.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.42.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.42.6. Executing OPT_SHARE pass.

5.42.7. Executing OPT_DFF pass (perform DFF optimizations).

5.42.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 10 unused wires.
<suppressed ~1 debug messages>

5.42.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.42.10. Rerunning OPT passes. (Maybe there is more to do..)

5.42.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.42.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

5.42.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

5.42.14. Executing OPT_SHARE pass.

5.42.15. Executing OPT_DFF pass (perform DFF optimizations).

5.42.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

5.42.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

5.42.18. Finished OPT passes. (There is nothing left to do.)

5.43. Executing SIMPLEMAP pass (map simple cells to gate primitives).

5.44. Executing TECHMAP pass (map to technology primitives).

5.44.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/mux_map.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/mux_map.v' to AST representation.
Generating RTLIL representation for module `\$_MUX8_'.
Generating RTLIL representation for module `\$_MUX4_'.
Successfully finished Verilog frontend.

5.44.2. Continuing TECHMAP pass.
Using template \$_MUX4_ for cells of type $_MUX4_.
No more expansions possible.
<suppressed ~24 debug messages>

5.45. Executing ABC pass (technology mapping using ABC).

5.45.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 700 gates and 947 wires to a netlist network with 245 inputs and 141 outputs.

5.45.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <yosys-exe-dir>/../share/yosys/gatemate/lut_tree_cells.genlib 
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.45.1.2. Re-integrating ABC results.
ABC RESULTS:          $__CC2_A cells:       47
ABC RESULTS:          $__CC2_O cells:        6
ABC RESULTS:          $__CC2_X cells:        1
ABC RESULTS:         $__CC3_AA cells:       13
ABC RESULTS:         $__CC3_AO cells:        9
ABC RESULTS:         $__CC3_AX cells:        1
ABC RESULTS:         $__CC3_OA cells:        7
ABC RESULTS:         $__CC3_OO cells:       17
ABC RESULTS:         $__CC3_XA cells:        1
ABC RESULTS:        $__CC3_X_O cells:        1
ABC RESULTS:        $__CC4_AAA cells:       54
ABC RESULTS:        $__CC4_AAO cells:       35
ABC RESULTS:        $__CC4_AAX cells:        3
ABC RESULTS:       $__CC4_AA_O cells:        1
ABC RESULTS:        $__CC4_AOA cells:        9
ABC RESULTS:       $__CC4_AO_A cells:        5
ABC RESULTS:       $__CC4_OA_O cells:        2
ABC RESULTS:       $__CC4_OO_A cells:        5
ABC RESULTS:       $__CC4_XA_O cells:        1
ABC RESULTS:      $__CC5_AAA_A cells:        9
ABC RESULTS:      $__CC5_AAA_O cells:        2
ABC RESULTS:      $__CC5_AAO_A cells:        1
ABC RESULTS:      $__CC5_AAO_O cells:        1
ABC RESULTS:      $__CC5_AAX_A cells:        1
ABC RESULTS:      $__CC5_AOA_A cells:        2
ABC RESULTS:      $__CC5_AOA_O cells:        1
ABC RESULTS:         $__CC_MUX cells:       68
ABC RESULTS:         $__CC_NOT cells:      122
ABC RESULTS:        internal signals:      561
ABC RESULTS:           input signals:      245
ABC RESULTS:          output signals:      141
Removing temp directory.

5.46. Executing TECHMAP pass (map to technology primitives).

5.46.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/lut_tree_map.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/lut_tree_map.v' to AST representation.
Generating RTLIL representation for module `\$__ZERO'.
Generating RTLIL representation for module `\$__ONE'.
Generating RTLIL representation for module `\$__CC_BUF'.
Generating RTLIL representation for module `\$__CC_MUX'.
Generating RTLIL representation for module `\$__CC2_A'.
Generating RTLIL representation for module `\$__CC3_A_O'.
Generating RTLIL representation for module `\$__CC3_A_X'.
Generating RTLIL representation for module `\$__CC2_O'.
Generating RTLIL representation for module `\$__CC3_O_A'.
Generating RTLIL representation for module `\$__CC3_O_X'.
Generating RTLIL representation for module `\$__CC2_X'.
Generating RTLIL representation for module `\$__CC3_X_A'.
Generating RTLIL representation for module `\$__CC3_X_O'.
Generating RTLIL representation for module `\$__CC3_AA'.
Generating RTLIL representation for module `\$__CC4_AA_O'.
Generating RTLIL representation for module `\$__CC4_AA_X'.
Generating RTLIL representation for module `\$__CC3_OO'.
Generating RTLIL representation for module `\$__CC4_OO_A'.
Generating RTLIL representation for module `\$__CC4_OO_X'.
Generating RTLIL representation for module `\$__CC3_XX'.
Generating RTLIL representation for module `\$__CC4_XX_A'.
Generating RTLIL representation for module `\$__CC4_XX_O'.
Generating RTLIL representation for module `\$__CC3_AO'.
Generating RTLIL representation for module `\$__CC4_AO_A'.
Generating RTLIL representation for module `\$__CC4_AO_O'.
Generating RTLIL representation for module `\$__CC4_AO_X'.
Generating RTLIL representation for module `\$__CC3_OA'.
Generating RTLIL representation for module `\$__CC4_OA_A'.
Generating RTLIL representation for module `\$__CC4_OA_O'.
Generating RTLIL representation for module `\$__CC4_OA_X'.
Generating RTLIL representation for module `\$__CC3_AX'.
Generating RTLIL representation for module `\$__CC4_AX_A'.
Generating RTLIL representation for module `\$__CC4_AX_O'.
Generating RTLIL representation for module `\$__CC4_AX_X'.
Generating RTLIL representation for module `\$__CC3_XA'.
Generating RTLIL representation for module `\$__CC4_XA_A'.
Generating RTLIL representation for module `\$__CC4_XA_O'.
Generating RTLIL representation for module `\$__CC4_XA_X'.
Generating RTLIL representation for module `\$__CC4_AAA'.
Generating RTLIL representation for module `\$__CC5_AAA_A'.
Generating RTLIL representation for module `\$__CC5_AAA_O'.
Generating RTLIL representation for module `\$__CC5_AAA_X'.
Generating RTLIL representation for module `\$__CC4_AXA'.
Generating RTLIL representation for module `\$__CC5_AXA_A'.
Generating RTLIL representation for module `\$__CC5_AXA_O'.
Generating RTLIL representation for module `\$__CC5_AXA_X'.
Generating RTLIL representation for module `\$__CC4_XAX'.
Generating RTLIL representation for module `\$__CC5_XAX_A'.
Generating RTLIL representation for module `\$__CC5_XAX_O'.
Generating RTLIL representation for module `\$__CC5_XAX_X'.
Generating RTLIL representation for module `\$__CC4_AAX'.
Generating RTLIL representation for module `\$__CC5_AAX_A'.
Generating RTLIL representation for module `\$__CC5_AAX_O'.
Generating RTLIL representation for module `\$__CC5_AAX_X'.
Generating RTLIL representation for module `\$__CC4_AXX'.
Generating RTLIL representation for module `\$__CC5_AXX_A'.
Generating RTLIL representation for module `\$__CC5_AXX_O'.
Generating RTLIL representation for module `\$__CC5_AXX_X'.
Generating RTLIL representation for module `\$__CC4_XXX'.
Generating RTLIL representation for module `\$__CC5_XXX_A'.
Generating RTLIL representation for module `\$__CC5_XXX_O'.
Generating RTLIL representation for module `\$__CC5_XXX_X'.
Generating RTLIL representation for module `\$__CC4_AAO'.
Generating RTLIL representation for module `\$__CC5_AAO_A'.
Generating RTLIL representation for module `\$__CC5_AAO_O'.
Generating RTLIL representation for module `\$__CC5_AAO_X'.
Generating RTLIL representation for module `\$__CC4_AOA'.
Generating RTLIL representation for module `\$__CC5_AOA_A'.
Generating RTLIL representation for module `\$__CC5_AOA_O'.
Generating RTLIL representation for module `\$__CC5_AOA_X'.
Generating RTLIL representation for module `\$__CC4_AOX'.
Generating RTLIL representation for module `\$__CC5_AOX_A'.
Generating RTLIL representation for module `\$__CC5_AOX_O'.
Generating RTLIL representation for module `\$__CC5_AOX_X'.
Successfully finished Verilog frontend.

5.46.2. Continuing TECHMAP pass.
Using template \$__CC4_AAA for cells of type $__CC4_AAA.
Using template \$__CC2_O for cells of type $__CC2_O.
Using template \$__CC3_AO for cells of type $__CC3_AO.
Using template \$__CC3_AA for cells of type $__CC3_AA.
Using template \$__CC5_AOA_A for cells of type $__CC5_AOA_A.
Using template \$__CC3_OO for cells of type $__CC3_OO.
Using template \$__CC_MUX for cells of type $__CC_MUX.
Using template \$__CC3_AX for cells of type $__CC3_AX.
Using template \$__CC4_AAO for cells of type $__CC4_AAO.
Using template \$__CC2_A for cells of type $__CC2_A.
Using template \$__CC3_OA for cells of type $__CC3_OA.
Using template \$__CC4_OA_O for cells of type $__CC4_OA_O.
Using template \$__CC4_AO_A for cells of type $__CC4_AO_A.
Using template \$__CC5_AAA_A for cells of type $__CC5_AAA_A.
Using template \$__CC3_X_O for cells of type $__CC3_X_O.
Using template \$__CC4_OO_A for cells of type $__CC4_OO_A.
Using template \$__CC4_AAX for cells of type $__CC4_AAX.
Using template \$__CC5_AAA_O for cells of type $__CC5_AAA_O.
Using template \$__CC4_AOA for cells of type $__CC4_AOA.
Using template \$__CC5_AAO_A for cells of type $__CC5_AAO_A.
Using template \$__CC5_AOA_O for cells of type $__CC5_AOA_O.
Using template \$__CC4_XA_O for cells of type $__CC4_XA_O.
Using template \$__CC5_AAX_A for cells of type $__CC5_AAX_A.
Using template \$__CC2_X for cells of type $__CC2_X.
Using template \$__CC4_AA_O for cells of type $__CC4_AA_O.
Using template \$__CC3_XA for cells of type $__CC3_XA.
Using template \$__CC5_AAO_O for cells of type $__CC5_AAO_O.
No more expansions possible.
<suppressed ~379 debug messages>

5.47. Executing GATEMATE_FOLDINV pass (folding LUT tree inverters).

5.48. Executing TECHMAP pass (map to technology primitives).

5.48.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/inv_map.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/inv_map.v' to AST representation.
Generating RTLIL representation for module `\$__CC_NOT'.
Successfully finished Verilog frontend.

5.48.2. Continuing TECHMAP pass.
Using template \$__CC_NOT for cells of type $__CC_NOT.
No more expansions possible.
<suppressed ~125 debug messages>
Removed 153 unused cells and 2505 unused wires.

5.49. Executing TECHMAP pass (map to technology primitives).

5.49.1. Executing Verilog-2005 frontend: /home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/lut_map.v
Parsing Verilog input from `/home/goran/Programs/oss-cad-suite/lib/../share/yosys/gatemate/lut_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

5.49.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

5.50. Executing CLKBUFMAP pass (inserting clock buffers).

5.51. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `top'. Setting top module to top.

5.51.1. Analyzing design hierarchy..
Top module:  \top

5.51.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.
Warning: Resizing cell port top.usb.ukp.ukprom.mem.0.0.A_DO from 5 bits to 20 bits.

5.52. Printing statistics.

=== top ===

   Number of wires:                457
   Number of wire bits:            998
   Number of public wires:          92
   Number of public wire bits:     336
   Number of ports:                  7
   Number of port bits:              7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                687
     $scopeinfo                      4
     CC_ADDF                        95
     CC_BRAM_20K                     1
     CC_BUFG                         1
     CC_DFF                        252
     CC_IBUF                         2
     CC_IOBUF                        2
     CC_L2T4                       150
     CC_L2T5                        31
     CC_LUT1                         3
     CC_LUT2                        54
     CC_MX2                         68
     CC_MX4                         20
     CC_OBUF                         3
     CC_PLL                          1

5.53. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

5.54. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 18 unused wires.
<suppressed ~22 debug messages>

5.55. Executing Verilog backend.

5.55.1. Executing BMUXMAP pass.

5.55.2. Executing DEMUXMAP pass.
Dumping module `\top'.

5.56. Executing JSON backend.

Warnings: 3 unique messages, 3 total
End of script. Logfile hash: b610a575ea, CPU: user 0.71s system 0.02s, MEM: 34.67 MB peak
Yosys 0.54+1 (git sha1 c0f52c6ea, clang++ 18.1.8 -fPIC -O3)
Time spent: 17% 30x opt_expr (0 sec), 16% 25x opt_clean (0 sec), ...
